<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	                    http://www.springframework.org/schema/tx   
    					http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
	                    http://www.springframework.org/schema/aop
       					http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	  
	<context:component-scan base-package="com.zqkc.service" ><!--
	  <context:exclude-filter type="aspectj" expression="com.zqkc.controller.*Controller+"/>
	--></context:component-scan> 
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	 <!-- 定义数据源Bean，使用spring jdbc数据源实现      -->            
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        <property name="driverClassName" value="${driver}" />
        <property name="url"  value="${url}" />              
	</bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- bean别名扫描配置 -->
		<property name="typeAliasesPackage" value="com.zqkc.model"/>
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mybatis/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zqkc.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 配置事务管理器增强Bean，指定事务管理器  -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	  <tx:attributes>
	     <!-- 所有find打头的方法是只读的 -->
	     <tx:method name="find*" read-only="true" propagation="REQUIRED" />
	     <!-- 其他方法使用默认事务管理器 -->
	     <tx:method name="*" />
	  </tx:attributes>
	</tx:advice>
	<!-- 配置AOP -->
	<aop:config>
	  <aop:pointcut expression="execution(* com.zqkc.dao.*.*(..))" id="txPoint" />
	  <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>

	<!--<aop:config>
	  <aop:aspect id="advice" ref="adviceBean">
	    <aop:before pointcut="execution(* com.zqkc.service.impl.*.*(..))" method="beforeLog" />
	    <aop:after pointcut="execution(* com.zqkc.service.impl.*.*(..))" method="afterLog" />
	  </aop:aspect>
	</aop:config>
	<bean id="adviceBean" class="com.zqkc.log.aspect.AspectLogger" />
--></beans>